C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD12864A
OBJECT MODULE PLACED IN LCD12864A.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD12864A.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /****************清达光电HGO12864A测试程序**************************************************/
   2          /******************************************************************/
   3          #include <reg52.h>
   4          #include <intrins.h>
   5          #include <absacc.h>
   6          #include <string.h>
   7          #include <stdio.h>
   8          #include <math.h>
   9          #include <stdlib.h>
  10          #include "LCD12864A.h"
  11          
  12          /*  西文字符库定义  */
  13          unsigned char code success[16]={ 
  14          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    /*" "=00H*/
  15          0x00,0x00,0x00,0x4F,0x00,0x00,0x00,0x00,    /*"!"=01H*/
  16          
  17          };
  18          
  19          
  20          /*---16*16数字字库定义------------*/
  21          unsigned char code largedigtal[360]={ 0x00,
  22          
  23          0x00,0x07,0x08,0x10,0x10,0x10,0x08,0x07,    /* 0 入口地址0*/
  24          0x00,0xf0,0x08,0x04,0x04,0x04,0x08,0xf0,
  25          
  26          0x00,0x08,0x18,0x1f,0x00,0x00,0x00,0x00,    /* 1 入口地址1*/
  27          0x00,0x04,0x04,0xfc,0x04,0x04,0x00,0x00,
  28          
  29          0x00,0x0e,0x10,0x10,0x10,0x11,0x0e,0x00,    /* 2 入口地址2*/
  30          0x00,0x1c,0x34,0x64,0xc4,0x84,0x0c,0x00,
  31          
  32          0x00,0x0c,0x10,0x10,0x10,0x11,0x0e,0x00,    /* 3 入口地址3*/
  33          0x00,0x18,0x04,0x04,0x84,0x88,0x70,0x00,
  34          
  35          0x00,0x01,0x02,0x04,0x08,0x1f,0x00,0x00,    /* 4 入口地址4*/
  36          0x00,0xe0,0x20,0x24,0x24,0xfc,0x24,0x20,
  37          
  38          0x00,0x1f,0x10,0x11,0x11,0x11,0x10,0x00,    /* 5 入口地址5*/
  39          0x00,0x88,0x84,0x04,0x04,0x08,0xf0,0x00,
  40          
  41          0x00,0x07,0x08,0x11,0x11,0x11,0x11,0x08,    /* 6 入口地址6*/
  42          0x00,0xf0,0x88,0x04,0x04,0x04,0x08,0xf0,
  43          
  44          0x00,0x18,0x10,0x10,0x10,0x11,0x1c,0x10,    /* 7 入口地址7*/
  45          0x00,0x00,0x00,0x00,0xfc,0x00,0x00,0x00,
  46          
  47          0x00,0x0E,0x11,0x10,0x10,0x11,0x0E,0x00,
  48          0x00,0x38,0x44,0x84,0x84,0x44,0x38,0x00,    /*"8",入口地址8*/
  49          
  50          0x00,0x07,0x08,0x10,0x10,0x08,0x07,0x00,
  51          0x00,0x00,0x8C,0x44,0x44,0x88,0xF0,0x00,    /*"9",入口地址9*/
  52          
  53          0x00,0x00,0x03,0x1C,0x07,0x00,0x00,0x00,0x04,0x3C,0xC4,0x40,0x40,0xE4,0x1C,0x04,/*"A",10*/
  54          
  55          0x10,0x1F,0x11,0x11,0x11,0x0E,0x00,0x00,0x04,0xFC,0x04,0x04,0x04,0x88,0x70,0x00,/*"B",11*/
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 2   

  56          
  57          0x03,0x0C,0x10,0x10,0x10,0x10,0x1C,0x00,0xE0,0x18,0x04,0x04,0x04,0x08,0x10,0x00,/*"C",12*/
  58          
  59          0x10,0x1F,0x10,0x10,0x10,0x08,0x07,0x00,0x04,0xFC,0x04,0x04,0x04,0x08,0xF0,0x00,/*"D",13*/
  60          
  61          0x10,0x1F,0x11,0x11,0x17,0x10,0x08,0x00,0x04,0xFC,0x04,0x04,0xC4,0x04,0x18,0x00,/*"E",14*/
  62          
  63          0x10,0x1F,0x11,0x11,0x17,0x10,0x08,0x00,0x04,0xFC,0x04,0x00,0xC0,0x00,0x00,0x00,/*"F",15*/
  64          
  65          0x00,0x00,0x00,0x03,0x03,0x00,0x00,0x00,
  66          0x00,0x00,0x00,0x0C,0x0C,0x00,0x00,0x00,    /*":",入口地址16*/
  67          
  68          
  69          0x00,0x00,0x00,0x01,0x01,0x11,0x1F,0x00,0x00,0x70,0x88,0x04,0x04,0x08,0xFC,0x04,/*"d",17*/
  70          
  71          0x10,0x1F,0x11,0x11,0x11,0x0E,0x00,0x00,0x04,0xFC,0x04,0x04,0x04,0x88,0x70,0x00,/*"B",18*/
  72          
  73          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x0C,0x00,0x00,0x00,0x00,0x00,/*".",19*/
  74          
  75          0x00,0x00,0x00,0x0F,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0xF8,0x80,0x80,0x80,0x00,/*"+",20*/
  76          
  77          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,/*"-",21*/
  78          
  79          };
  80          
  81          
  82          
  83          /*  中文菜单定义 */
  84          /*  16*16汉字定义*/
  85          
  86          unsigned char code hanzi[1100]={ 0x00,
  87          
  88          
  89          0x02,0x02,0x42,0x42,0x42,0x42,0x42,0x7F,0x42,0x42,0x42,0x42,0x42,0x02,0x02,0x00,
  90          0x01,0x01,0x02,0x04,0x08,0x30,0xC0,0x00,0xC0,0x30,0x08,0x04,0x02,0x01,0x01,0x00,/*"天",0*/
  91          
  92          0x08,0x06,0x40,0x30,0x03,0x08,0x2A,0x2A,0x2A,0xFF,0x2A,0x2A,0x3E,0x08,0x08,0x00,
  93          0x20,0x20,0x3E,0xC0,0x00,0x08,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x08,0x00,0x00,/*"津",1*/
  94          
  95          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,
  96          0x01,0x01,0x02,0x04,0x08,0x30,0xC0,0x00,0xC0,0x30,0x08,0x04,0x02,0x01,0x01,0x00,/*"大",2*/
  97          
  98          0x02,0x0C,0x88,0x69,0x09,0x09,0x89,0x69,0x09,0x09,0x19,0x28,0xC8,0x0A,0x0C,0x00,
  99          0x20,0x20,0x20,0x20,0x20,0x22,0x21,0x7E,0x60,0xA0,0x20,0x20,0x20,0x20,0x20,0x00,/*"学",3*/
 100          
 101          0x02,0x42,0x33,0x00,0x00,0x47,0x44,0x54,0x54,0x4F,0x54,0x64,0x44,0x07,0x00,0x00,
 102          0x01,0x02,0xFC,0x02,0x01,0xFF,0x91,0x91,0x91,0xFD,0x91,0x95,0x93,0xFD,0x01,0x00,/*"通",4*/
 103          
 104          0x00,0x01,0x06,0x1F,0xE0,0x00,0x20,0x24,0x24,0xA4,0x64,0x24,0x24,0x24,0x20,0x00,
 105          0x80,0x00,0x00,0xFF,0x00,0x00,0x00,0x9F,0x92,0x92,0x92,0x92,0x92,0x9F,0x00,0x00,/*"信",5*/
 106          
 107          0x00,0x01,0x06,0x1F,0xE0,0x00,0x20,0x24,0x24,0xA4,0x64,0x24,0x24,0x24,0x20,0x00,
 108          0x80,0x00,0x00,0xFF,0x00,0x00,0x00,0x9F,0x92,0x92,0x92,0x92,0x92,0x9F,0x00,0x00,/*"信",6*/
 109          
 110          0x01,0x01,0x01,0x7D,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x7D,0x01,0x01,0x01,0x00,
 111          0x00,0x00,0x00,0x60,0xA0,0x20,0x20,0x20,0x22,0x21,0x22,0x3C,0x00,0x00,0x00,0x00,/*"号",7*/
 112          
 113          0x40,0x47,0x44,0x44,0x7C,0x00,0x01,0x79,0x49,0x49,0x4F,0x49,0x49,0x79,0x01,0x00,
 114          0x00,0xC2,0x41,0x42,0x7C,0x02,0xE2,0x22,0x22,0x22,0xFE,0x22,0x22,0x2A,0xE7,0x00,/*"强",8*/
 115          
 116          0x00,0x00,0x3F,0x24,0x24,0x24,0x3F,0xA4,0x64,0x24,0x3F,0x24,0x24,0x24,0x20,0x00,
 117          0x02,0x0C,0xF1,0x01,0x21,0x32,0xAA,0xA4,0xA4,0xA4,0xAA,0x32,0x01,0x01,0x01,0x00,/*"度",9*/
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 3   

 118           
 119          0x00,0x7F,0x40,0x48,0x49,0x49,0x49,0x4F,0x49,0x49,0x49,0x48,0x40,0x7F,0x00,0x00,
 120          0x00,0xFF,0x02,0x12,0x12,0x12,0x12,0xF2,0x12,0x52,0x32,0x12,0x02,0xFF,0x00,0x00,/*"国",10*/
 121          
 122          0x02,0x04,0x0B,0x32,0xC2,0x22,0x13,0x08,0x04,0x00,0x1F,0x00,0x00,0xFF,0x00,0x00,
 123          0x00,0x00,0xFC,0x02,0x22,0x12,0xE2,0x02,0x0E,0x00,0xF0,0x02,0x01,0xFE,0x00,0x00,/*"创",11*/
 124          
 125          0x00,0x00,0x00,0x07,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x04,0x02,0x01,0x00,0x00,
 126          0x10,0x20,0xC0,0x00,0x00,0x02,0x01,0xFE,0x00,0x00,0x00,0x00,0x00,0x80,0x70,0x00,/*"小",12*/
 127          
 128          0x04,0x0C,0x35,0xC6,0x0C,0x00,0x00,0x7F,0x44,0x44,0x44,0x44,0x7F,0x00,0x00,0x00,
 129          0x44,0xE6,0x44,0x48,0x48,0x02,0x02,0xFE,0x42,0x42,0x42,0x42,0xFE,0x02,0x02,0x00,/*"组",13*/
 130          
 131          
 132          };
 133          
 134          
 135          
 136          
 137          
 138          
 139          /*  中文菜单定义 */
 140          /*  32*32汉字定义 */
 141          
 142          unsigned char code hanzibig[1025]={
 143          
 144          
 145          0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x07,0x07,
 146          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x0C,0x1C,0x0C,0x04,0x00,0x00,0x00,0x00,0x00,
 147          0x00,0x00,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0xFF,0xFF,
 148          0x02,0x03,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x06,0x0E,0x06,0x02,0x00,0x00,0x00,
 149          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x0E,0x7C,0xF0,0x00,
 150          0x00,0xC0,0x30,0x0C,0x07,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 151          0x00,0x00,0x02,0x02,0x04,0x0C,0x08,0x10,0x20,0x60,0xC0,0x80,0x00,0x00,0x00,0x00,
 152          0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x60,0x70,0x38,0x1C,0x1C,0x08,0x08,0x08,0x00,/*"天",0*/
 153          
 154          0x00,0x00,0x00,0x00,0x20,0x18,0x0E,0x06,0x00,0x00,0x00,0x02,0x02,0x02,0x02,0x02,
 155          0x02,0x3F,0x3F,0x02,0x02,0x02,0x02,0x02,0x03,0x07,0x02,0x00,0x00,0x00,0x00,0x00,
 156          0x00,0x80,0x60,0x38,0x1C,0x00,0x00,0x03,0x1C,0xE0,0x20,0x21,0x21,0x21,0x21,0x21,
 157          0x21,0xFF,0xFF,0x21,0x21,0x21,0x21,0x21,0xFF,0xFF,0x20,0x20,0x60,0x20,0x00,0x00,
 158          0x00,0x00,0x02,0x02,0x03,0x0F,0x3C,0xC0,0x01,0x01,0x11,0x11,0x11,0x11,0x11,0x11,
 159          0x11,0xFF,0xFF,0x11,0x11,0x11,0x11,0x11,0x11,0x31,0x31,0x11,0x03,0x01,0x00,0x00,
 160          0x00,0x00,0x00,0x00,0xFC,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 161          0x00,0xFE,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"津",1*/
 162          
 163          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,
 164          0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 165          0x00,0x00,0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x17,0xFF,
 166          0xFE,0x11,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x20,0x60,0x60,0x20,0x00,0x00,
 167          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x3E,0xF8,0xC0,
 168          0x00,0xC0,0x70,0x1C,0x06,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 169          0x00,0x00,0x02,0x02,0x04,0x04,0x08,0x18,0x30,0x60,0xC0,0x80,0x00,0x00,0x00,0x00,
 170          0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0x70,0x38,0x38,0x1C,0x18,0x08,0x00,0x00,/*"大",2*/
 171          
 172          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x0E,0x07,0x03,0x00,0x00,0x20,0x1C,0x0F,
 173          0x07,0x00,0x00,0x00,0x00,0x03,0x0E,0x3C,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 174          0x00,0x00,0x00,0x06,0x3E,0x3C,0x20,0x21,0x21,0xA1,0xA1,0x21,0x21,0x21,0x21,0xA1,
 175          0x21,0x21,0x21,0x21,0xE1,0xA3,0x23,0x21,0x20,0x24,0x28,0x78,0x70,0x20,0x00,0x00,
 176          0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x3F,
 177          0x1F,0x24,0x24,0x44,0x84,0x84,0x04,0x04,0x04,0x04,0x0C,0x1C,0x0C,0x04,0x00,0x00,
 178          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x0C,0x0E,0xFC,
 179          0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"学",3*/
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 4   

 180          
 181          0x00,0x02,0x03,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x03,0x07,0x02,0x00,0x00,
 182          0x00,0x03,0x3F,0x1C,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 183          0x00,0x00,0x00,0x20,0x10,0x0C,0x06,0x03,0x01,0x07,0x3E,0xF0,0x80,0x00,0x01,0x06,
 184          0x38,0xE0,0xC0,0x40,0x5F,0x4F,0x48,0x40,0x40,0x44,0x58,0x70,0xE0,0x40,0x00,0x00,
 185          0x00,0x00,0x00,0x00,0x00,0x03,0x0E,0xB8,0xE0,0xF0,0x3C,0x1F,0x07,0x01,0x00,0x00,
 186          0x00,0x01,0x07,0x7C,0xF0,0x00,0xF8,0x0F,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 187          0x00,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x00,0x02,0x02,0x04,0xC8,0x08,0x10,0x20,
 188          0x60,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x70,0x38,0x1C,0x0C,0x08,0x00,0x00,/*"欢",4*/
 189          
 190          0x00,0x00,0x00,0x00,0x10,0x0C,0x0F,0x07,0x00,0x00,0x00,0x00,0x07,0x03,0x04,0x04,
 191          0x08,0x08,0x18,0x10,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x07,0x02,0x00,0x00,0x00,
 192          0x00,0x00,0x04,0x04,0x04,0x04,0x0F,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
 193          0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,
 194          0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFC,0x18,0x30,
 195          0x20,0x20,0x40,0x00,0xFF,0xFF,0x00,0x00,0x08,0x08,0x0C,0xFC,0x00,0x00,0x00,0x00,
 196          0x00,0x20,0x70,0x60,0xC0,0x80,0x00,0x00,0x80,0x40,0x20,0x30,0x10,0x10,0x18,0x18,
 197          0x18,0x18,0x18,0x18,0xD8,0x98,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x10,0x00,0x00,/*"迎",5*/
 198          
 199          0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x0F,0x3C,0x10,0x00,0x00,0x00,0x01,0x07,0x3D,
 200          0x19,0x11,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x03,0x03,0x01,0x00,0x00,0x00,
 201          0x00,0x04,0x08,0x10,0x60,0xC0,0xFF,0xFF,0x00,0x00,0x10,0x20,0x41,0x86,0x1E,0x0C,
 202          0x08,0x00,0x00,0x7F,0x3F,0x00,0x08,0x04,0x26,0xC3,0x81,0x00,0x00,0x00,0x00,0x00,
 203          0x00,0x00,0x00,0x00,0x00,0x00,0xF3,0xF0,0x00,0x00,0x47,0x87,0x00,0x00,0x48,0x26,
 204          0x27,0x33,0x70,0xF0,0x80,0x00,0x00,0x00,0x02,0x02,0xC1,0xC0,0x00,0x00,0x00,0x00,
 205          0x00,0x00,0x00,0x10,0x30,0xF0,0x80,0x00,0x00,0x00,0xFC,0xFC,0x04,0x04,0x04,0x04,
 206          0x84,0x84,0x04,0x04,0x04,0x04,0x9C,0x7C,0x08,0x00,0x80,0xE0,0xF0,0x00,0x00,0x00,/*"您",6*/
 207          
 208          
 209          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
             -x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 210          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0
             -x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 211          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x83,0xF3,0x03,0x00,0x00,0x00,0x00,0x00,0
             -x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 212          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xC0,0x80,0x00,0x00,0x00,0
             -x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 213          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,         /*"！", 入口地址7*/
 214          
 215          
 216          };
 217          
 218          
 219          
 220          /*************************************************/
 221           /*延时*/
 222          /*************************************************/
 223          void delay_lcd()    
 224           {unsigned char i,j;
 225   1         for(i=32;i>0;i--)
 226   1          for(j=255;j>0;j--);
 227   1       }
 228          
 229           /*************************************************/
 230           /*延时*/
 231          /*************************************************/
 232          void delay1()    
 233           {unsigned char i,j;
 234   1         for(i=255;i>0;i--)
 235   1          {
 236   2              for(j=255;j>0;j--) 
 237   2              {nop();
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 5   

 238   3               nop();
 239   3               nop();
 240   3               nop();
 241   3               nop();
 242   3               nop();
 243   3               nop();
 244   3               nop();}
 245   2              }
 246   1       }
 247          /*************************************************/
 248          //初始化
 249          /*************************************************/
 250          void lcd_init(void)
 251          {
 252   1        rst=0;
 253   1        delay_lcd();
 254   1        rst=1;
 255   1        delay_lcd();
 256   1        wcom(0xa3);        //LCD BIAS SET ( A2 1/8;A3 1/65DUTY)
 257   1        wcom(0xa0);        //ADC  select,NORMAL   0-->127
 258   1        wcom(0xaf);        // DISPLAY ON/OFF
 259   1        wcom(0x2f);        //power control(VB,VR,VF=1,1,1)
 260   1        wcom(0x23);        // VOLT REGULATOR RADIO SET 
 261   1        wcom(0x81);        //ELECTRONIC VOLUME mode setting 100B 对比度命令
 262   1        wcom(0x28);        //REFERENCE VOLT REG  set
 263   1        wcom(0xc0);        //SHL SELECT
 264   1        wcom(0xaf);        //DISPLAY ON/OFF
 265   1        wcom(0x40);        // DISPLAY START LINE SET
 266   1        nop();
 267   1        nop();
 268   1      }
 269          
 270          
 271          
 272          /*************************************************/
 273          //写命令
 274          /*************************************************/
 275          
 276          void wcom(unsigned char com)
 277           { 
 278   1         cs1=0;
 279   1         nop();
 280   1         a0=0;                   //a0='0'，写入命令
 281   1         nop();
 282   1         write(com);
 283   1         nop();
 284   1         nop(); 
 285   1         cs1=1;
 286   1      }
 287          
 288          /*************************************************/
 289          //写数据
 290          /*************************************************/
 291          
 292          void wdata(unsigned char dat)
 293           {
 294   1         cs1=0;
 295   1         nop();
 296   1         a0=1;                  //a0='1',写入数据
 297   1         nop();
 298   1         write(dat);  
 299   1         nop();
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 6   

 300   1         nop(); 
 301   1         cs1=1;
 302   1      }
 303          /*************************************************
 304          //串口移位输出, SPI方式写入8bit 数据
 305          /*************************************************/
 306          
 307          void write(unsigned char dat)
 308           {  unsigned char s,temp;
 309   1          int i;
 310   1          sclk=0;
 311   1          s=dat;
 312   1      
 313   1          for(i=8;i>0;i--)
 314   1            {sclk=0;
 315   2             nop();
 316   2             nop();
 317   2             temp=s & 0x80;                   //先送高位，再送低位
 318   2             if(temp)
 319   2                  {di=1;}
 320   2             else {di=0;}
 321   2      
 322   2             sclk=1;   
 323   2             s=s<<1;  
 324   2            }
 325   1       } 
 326          
 327          /********************************************/
 328          /*  西文字符写入函数:CW_PR  8*8             */
 329          
 330          void cwpr(unsigned char cod,unsigned char page,unsigned char seg)
 331          { unsigned char zmseg;
 332   1      
 333   1              wcom(0xaf);// 开显示
 334   1                  wcom(0xb0+page);   // 设定页地址，设定page命令是0xB0,共 9 page                                       
 335   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列制止范围 0~131    , 写高四位列地
             -址                      
 336   1              wcom(0x0f&seg);             // 写低四位列地址                   
 337   1                      for(zmseg=0;zmseg<8;zmseg++)
 338   1              {   
 339   2                              wdata(success[cod*8+zmseg]);  // 连续写入8个数据
 340   2      
 341   2      }
 342   1      }
 343          
 344          
 345          /********************************************/
 346          /*  西文字符写入函数:CW_PR    16*16         */
 347          
 348          void cwpr16(unsigned char cod,unsigned char page,unsigned char seg)
 349          { unsigned char zmseg;
 350   1      
 351   1              wcom(0xaf);// 开显示
 352   1                  wcom(0xb0+page);   // 设定页地址，设定page命令是0xB0,共 9 page                                       
 353   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列制止范围 0~131    , 写高四位列地
             -址                      
 354   1              wcom(0x0f&seg);             // 写低四位列地址                   
 355   1                      for(zmseg=0;zmseg<16;zmseg++)
 356   1              {   
 357   2                              wdata(largedigtal[cod*32+zmseg]);  // 连续写入16个数据
 358   2              }
 359   1                  wcom(0xb0+page-1);   // 设定页地址，设定page命令是0xB0,共 9 page                                     
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 7   

             -  
 360   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列制止范围 0~131    , 写高四位列地
             -址                      
 361   1              wcom(0x0f&seg);             // 写低四位列地址                   
 362   1                      for(zmseg=16;zmseg<32;zmseg++)
 363   1              {   
 364   2                              wdata(largedigtal[cod*32+zmseg]);  // 连续写入16个数据
 365   2              }
 366   1      
 367   1      }
 368          
 369          
 370          
 371          /********************************************/
 372          /*  西文字符写入函数:CW_PR    16*8         */
 373          /*  写入数字和英文字母    16行 8列                  */
 374          /********************************************/
 375          void writedigital(unsigned char cod,unsigned char page,unsigned char seg)
 376          { unsigned char zmseg;
 377   1      
 378   1              wcom(0xaf);// 开显示
 379   1                  wcom(0xb0+page);   // 设定页地址，设定page命令是0xB0,共 9 page                                       
 380   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列制止范围 0~131    , 写高四位列地
             -址                      
 381   1              wcom(0x0f&seg);             // 写低四位列地址                   
 382   1                      for(zmseg=8;zmseg>0;zmseg--)
 383   1              {   
 384   2                              wdata(largedigtal[cod*16+zmseg]);  // 连续写入16个数据
 385   2              }
 386   1                  wcom(0xb0+page-1);   // 设定页地址，设定page命令是0xB0,共 9 page                                     
             -  
 387   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列制止范围 0~131    , 写高四位列地
             -址                      
 388   1              wcom(0x0f&seg);             // 写低四位列地址                   
 389   1                      for(zmseg=16;zmseg>8;zmseg--)
 390   1              {   
 391   2                              wdata(largedigtal[cod*16+zmseg]);  // 连续写入16个数据
 392   2              }
 393   1      
 394   1      }
 395          
 396          
 397          
 398          /********************************************/
 399          /*  中文字符写入函数:CW_PR    16*16         */
 400          /*            写入一个汉字                  */
 401          /*                                          */
 402          /********************************************/
 403          void writeone(unsigned char cod,unsigned char page,unsigned char seg)
 404          { unsigned char zmseg;
 405   1      
 406   1              wcom(0xaf);// 开显示
 407   1                  wcom(0xb0+page);   // 设定页地址，设定page命令是0xB0,共 9 page                                       
 408   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列地址范围 0~131    , 写高四位列地
             -址                      
 409   1              wcom(0x0f&seg);             // 写低四位列地址                   
 410   1                      for(zmseg=16;zmseg>0;zmseg--)
 411   1              {   
 412   2                              wdata(hanzi[cod*32+zmseg]);  // 连续写入16个数据
 413   2              }
 414   1                  wcom(0xb0+page-1);   // 设定页地址，设定page命令是0xB0,共 9 page                                     
             -  
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 8   

 415   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列地址范围 0~131    , 写高四位列地
             -址                      
 416   1              wcom(0x0f&seg);             // 写低四位列地址                   
 417   1                      for(zmseg=32;zmseg>16;zmseg--)
 418   1              {   
 419   2                              wdata(hanzi[cod*32+zmseg]);  // 连续写入16个数据
 420   2              }
 421   1      }
 422          
 423          
 424          /********************************************/
 425          /*  中文字符写入函数:CW_PR    32*32         */
 426          /*            写入一个汉字                  */
 427          /*                                          */
 428          /********************************************/
 429          void writeonebig(unsigned char cod,unsigned char page,unsigned char seg)
 430          { 
 431   1                      unsigned char zmseg;
 432   1      
 433   1              wcom(0xaf);// 开显示
 434   1                  wcom(0xb0+page);   // 设定页地址，设定page命令是0xB0,共 9 page                                       
 435   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列地址范围 0~131    , 写高四位列地
             -址                      
 436   1              wcom(0x0f&seg);             // 写低四位列地址                   
 437   1                      for(zmseg=32;zmseg>0;zmseg--)
 438   1              {   
 439   2                              wdata(hanzibig[cod*128+zmseg]);  // 连续写入32个数据
 440   2              }
 441   1      
 442   1                  wcom(0xb0+page-1);   // 设定页地址，设定page命令是0xB0,共 9 page                                     
             -  
 443   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列地址范围 0~131    , 写高四位列地
             -址                      
 444   1              wcom(0x0f&seg);             // 写低四位列地址                   
 445   1                      for(zmseg=64;zmseg>32;zmseg--)
 446   1              {   
 447   2                              wdata(hanzibig[cod*128+zmseg]);  // 连续写入32个数据
 448   2              }
 449   1      
 450   1                  wcom(0xb0+page-2);   // 设定页地址，设定page命令是0xB0,共 9 page                                     
             -  
 451   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列地址范围 0~131    , 写高四位列地
             -址                      
 452   1              wcom(0x0f&seg);             // 写低四位列地址                   
 453   1                      for(zmseg=96;zmseg>64;zmseg--)
 454   1              {   
 455   2                              wdata(hanzibig[cod*128+zmseg]);  // 连续写入32个数据
 456   2              }
 457   1      
 458   1                  wcom(0xb0+page-3);   // 设定页地址，设定page命令是0xB0,共 9 page                                     
             -  
 459   1              wcom(0x10+(0x0f&(seg>>4))); // 设定列地址, 设定列地址命令0x01 , 列地址范围 0~131    , 写高四位列地
             -址                      
 460   1              wcom(0x0f&seg);             // 写低四位列地址                   
 461   1                      for(zmseg=128;zmseg>96;zmseg--)
 462   1              {   
 463   2                              wdata(hanzibig[cod*128+zmseg]);  // 连续写入32个数据
 464   2              }
 465   1      
 466   1      }
 467          
 468          
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 9   

 469          
 470          /*16*16汉字写入子程序*/
 471          void ccwpr(unsigned char cod,unsigned char page,unsigned char seg)
 472          { unsigned char zmseg;
 473   1      
 474   1              wcom(0xaf);//开显示
 475   1              wcom(0xb0+page); //设定页地址                                            
 476   1              wcom(0x10+(0x0f&(seg>>4)));  //列地址 高四位                    
 477   1              wcom(0x0f&seg);                  //列地址 低四位        
 478   1                      for(zmseg=0;zmseg<=15;zmseg++)
 479   1              {   
 480   2      //                      wdata(CCTAB[cod*32+zmseg]);  //连续写入16个字节数据
 481   2      
 482   2              }
 483   1                      
 484   1              wcom(0xb0+page+1);               //跳到下一页
 485   1                                       
 486   1              wcom(0x10+(0x0f&(seg>>4)));  
 487   1                      
 488   1              wcom(0x0f&seg); 
 489   1      
 490   1             for(zmseg=16;zmseg<=31;zmseg++)  //连续写入16个字节数据
 491   1              {   
 492   2      //                      wdata(CCTAB[cod*32+zmseg]);
 493   2      
 494   2      }
 495   1      
 496   1      }
*** WARNING C280 IN LINE 471 OF LCD12864A.C: 'cod': unreferenced local variable
 497          
 498          /*************************************************/
 499          //写disdate_a数据
 500          /*************************************************/
 501          void disdate_a(unsigned char dat_a,unsigned char dat_b)
 502          {
 503   1         int seg;
 504   1         unsigned char page;
 505   1         for(page=0xb0;page<0xb9;page++)                     //写页地址共9页  0xb8----0xb9
 506   1            { wcom(page);                                    //如下汉字可改
 507   2              wcom(0x10);                                    //设列地址高四位
 508   2              wcom(0x00);                                    //设列地址低四位
 509   2                         
 510   2              for(seg=0;seg<64;seg++)
 511   2                 { wdata(dat_a);
 512   3                   wdata(dat_b);
 513   3                 }
 514   2            } 
 515   1         wcom(0xaf); /*开显示指令*/          
 516   1      }
 517          
 518          
 519          
 520          /*************************************************/
 521          //写disdate_b数据全屏写数据
 522          /*************************************************/
 523          void disdate_b(unsigned char *p)
 524          {
 525   1         int seg;
 526   1        unsigned char page;
 527   1         wcom(0xaf);/*开显示*/
 528   1         for(page=0xb0;page<0xb8;page++)                    //写页地址共8页  0xb0----0xb8
 529   1               {
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 10  

 530   2                wcom(page);                      
 531   2                wcom(0x10); 
 532   2                wcom(0x00); 
 533   2                           
 534   2                for(seg=0;seg<128;seg++)
 535   2                   { 
 536   3                    wdata(*p++);
 537   3                   }              
 538   2               }           
 539   1       }
 540          
 541          
 542           void clr_blank()               /*-----清屏幕-----*/
 543          {
 544   1          writeone(15,7,112); 
 545   1          writeone(15,7,96); 
 546   1          writeone(15,7,80);         /*----不显示------*/
 547   1          writeone(15,7,64);
 548   1          writeone(15,7,48);
 549   1          writeone(15,7,32);
 550   1          writeone(15,7,16);  
 551   1          writeone(15,7,0);
 552   1      
 553   1      
 554   1              writeone(15,5,112); 
 555   1          writeone(15,5,96); 
 556   1          writeone(15,5,80);         /*----不显示------*/
 557   1          writeone(15,5,64);
 558   1          writeone(15,5,48);
 559   1          writeone(15,5,32);
 560   1          writeone(15,5,16);  
 561   1          writeone(15,5,0);
 562   1      
 563   1          writeone(15,3,112); 
 564   1          writeone(15,3,96); 
 565   1          writeone(15,3,80);         /*----不显示------*/
 566   1          writeone(15,3,64);
 567   1          writeone(15,3,48);
 568   1          writeone(15,3,32);
 569   1          writeone(15,3,16);  
 570   1          writeone(15,3,0);
 571   1      
 572   1          writeone(15,1,112); 
 573   1          writeone(15,1,96); 
 574   1          writeone(15,1,80);         /*----不显示------*/
 575   1          writeone(15,1,64);
 576   1          writeone(15,1,48);
 577   1          writeone(15,1,32);
 578   1          writeone(15,1,16);  
 579   1          writeone(15,1,0);
 580   1      
 581   1      }
 582              
 583          /*--  进入开机画面函数--------*/
 584          
 585          void entermenu()             /*进入开机画面*/
 586          {
 587   1           writeonebig(0,7,96);       /*天*/
 588   1               delay1();
 589   1               delay1();
 590   1               delay1();
 591   1           writeonebig(1,7,64);       /*津*/
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 11  

 592   1               delay1();
 593   1               delay1();
 594   1               delay1();
 595   1           writeonebig(2,7,32);       /*大*/
 596   1               delay1();
 597   1               delay1();
 598   1               delay1();
 599   1           writeonebig(3,7,0);        /*学*/
 600   1               delay1();
 601   1               delay1();
 602   1               delay1();
 603   1           writeonebig(4,3,96);       /*欢*/
 604   1               delay1();
 605   1               delay1();
 606   1               delay1();
 607   1           writeonebig(5,3,64);       /*迎*/
 608   1               delay1();
 609   1               delay1();
 610   1               delay1();
 611   1           writeonebig(6,3,32);       /*您*/
 612   1           delay1();
 613   1               delay1();
 614   1               delay1();
 615   1               writeonebig(7,3,0);        /*！*/
 616   1               delay1();
 617   1           delay1();
 618   1           delay1();
 619   1               delay1();
 620   1               delay1();
 621   1               delay1();
 622   1               delay1();
 623   1               clr_blank();               /*清屏幕*/
 624   1           delay1();
 625   1           delay1();
 626   1           delay1();
 627   1               delay1();
 628   1               delay1();
 629   1               delay1();
 630   1               delay1();
 631   1           writeone(0,6,96);                           /*天*/
 632   1               writeone(1,6,80);                               /*津*/
 633   1               writeone(2,6,64);                               /*大*/
 634   1               writeone(3,6,48);                               /*学*/
 635   1               writeone(4,6,32);                               /*通*/
 636   1               writeone(5,6,16);               /*信*/   
 637   1               writeone(6,3,112);                          /*信*/
 638   1               writeone(7,3,96);                           /*号*/
 639   1               writeone(8,3,80);                           /*强*/
 640   1               writeone(9,3,64);                               /*度*/
 641   1               writedigital(16,3,56);                         /*:*/
 642   1               writedigital(17,3,8);              /*d*/
 643   1               writedigital(18,3,1);              /*B*/
 644   1               writeone(10,1,80);                              /*国*/
 645   1               writeone(11,1,64);                              /*创*/
 646   1               writeone(12,1,48);                              /*小*/
 647   1               writeone(13,1,32);                              /*组*/
 648   1      
 649   1      }
 650          
 651          /****************************************************************
 652          //在液晶上显示一个有符号整数，共6位，第一位为符号位
 653          //1<=page<=7,24<=seg<=120
C51 COMPILER V9.00   LCD12864A                                                             05/02/2014 20:31:30 PAGE 12  

 654          ****************************************************************/
 655          void Dispchar(int dat,unsigned char page,unsigned char seg)
 656          {
 657   1              unsigned char baiwei,shiwei,gewei;
 658   1              if(dat>=0)
 659   1                      writedigital(20,page,seg);
 660   1              else
 661   1              {
 662   2                      writedigital(21,page,seg);
 663   2                      dat=-dat;
 664   2              }
 665   1              baiwei=dat/100;
 666   1              shiwei=(dat-baiwei*100)/10;
 667   1              gewei=dat-baiwei*100-shiwei*10;
 668   1              writedigital(baiwei,page,seg-8);
 669   1              writedigital(shiwei,page,seg-16);
 670   1              writedigital(gewei,page,seg-24);
 671   1      }
 672          
 673          void Dispchar_big(int dat,unsigned char page,unsigned char seg)
 674          {
 675   1      xdata   unsigned char wanwei, qianwei,baiwei,shiwei,gewei;
 676   1              if(dat>=0)
 677   1                      writedigital(20,page,seg);
 678   1              else
 679   1              {
 680   2                      writedigital(21,page,seg);
 681   2                      dat=-dat;
 682   2              }
 683   1              wanwei=dat/10000;
 684   1              qianwei=(dat-wanwei*10000)/1000;
 685   1              baiwei=(dat-wanwei*10000-qianwei*1000)/100;
 686   1              shiwei=(dat-wanwei*10000-qianwei*1000-baiwei*100)/10;
 687   1              gewei=dat-wanwei*10000-qianwei*1000-baiwei*100-shiwei*10;
 688   1              writedigital(wanwei,page,seg-8);
 689   1              writedigital(qianwei,page,seg-16);
 690   1              writedigital(baiwei,page,seg-24);
 691   1              writedigital(shiwei,page,seg-32);
 692   1              writedigital(gewei,page,seg-40);
 693   1      }
 694          
 695          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2420    ----
   CONSTANT SIZE    =   2501    ----
   XDATA SIZE       =   ----      49
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
